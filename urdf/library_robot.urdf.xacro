<?xml version="1.0" ?>
<robot name="library_robot" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="base_link">
    <visual>
      <geometry>
        <mesh filename="package://library_robot/mesh/visual/base_link.dae" scale="1 1 1" />  
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://library_robot/mesh/collision/base_link.stl" scale="1 1 1" />
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="10.0" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
              iyy="0.1" iyz="0.0"
              izz="0.1" />
    </inertial>
    
  </link>

  <!-- Wheel -->
  <link name="right_wheel_link">
    <visual>
      <geometry>
        <mesh filename="package://library_robot/mesh/visual/wheel_right_trans.dae" scale="1 1 1" />  
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://library_robot/mesh/collision/wheel_right_trans.stl" scale="1 1 1" />
      </geometry>
    </collision> 

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.2" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
              iyy="0.1" iyz="0.0"
              izz="0.1" />
    </inertial>
    
  </link>

  <link name="left_wheel_link">
    <visual>
      <geometry>
        <mesh filename="package://library_robot/mesh/visual/wheel_left_trans.dae" scale="1 1 1" />  
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://library_robot/mesh/collision/wheel_left_trans.stl" scale="1 1 1" />
      </geometry>
    </collision> 

    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.2" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
              iyy="0.1" iyz="0.0"
              izz="0.1" />
    </inertial>
    
  </link>

  <!-- Joint -->
  <joint name="right_wheel_joint" type="continuous">
    <origin xyz="0.0 -0.13 -0.502" rpy="0 0 0" />
    <axis xyz="0 1 0" />
    <parent link="base_link" />
    <child link="right_wheel_link" />    
  </joint>

  <joint name="left_wheel_joint" type="continuous">    
    <origin xyz="0.0 0.13 -0.502" rpy="0 0 0" />
    <axis xyz="0 1 0" />
    <parent link="base_link" />
    <child link="left_wheel_link" />    
  </joint>


  <!-- Transmission -->
  <transmission name="tran1">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="left_wheel_joint">
          <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor1">
          <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
      </actuator>
  </transmission>

  <transmission name="tran2">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="right_wheel_joint">
          <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor2">
          <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
      </actuator>
  </transmission>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/library_robot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>50</updateRate>
        <legacyMode>false</legacyMode>
        <leftJoint>left_wheel_joint</leftJoint>
        <rightJoint>right_wheel_joint</rightJoint>
        <wheelSeparation>0.26</wheelSeparation>
        <wheelDiameter>0.145</wheelDiameter>
        <torque>15</torque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_link</robotBaseFrame>
        <publishWheelTF>false</publishWheelTF>
        <publishWheelJointState>true</publishWheelJointState>
        <rosDebugLevel>na</rosDebugLevel>
        <wheelAcceleration>0</wheelAcceleration>
        <wheelTorque>15</wheelTorque>
        <odometrySource>world</odometrySource>
        <publishOdomTF>true</publishOdomTF>
        <publishTf>1</publishTf>
    </plugin>
  </gazebo>

  <!-- Caster -->
  <joint name="front_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster_link"/>
    <origin xyz="0.3 0.0 ${-0.502-0.0425}"/>        
  </joint>

  <link name="front_caster_link">
    <visual>
        <geometry>
            <sphere radius="0.03"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0"/>
    </visual>
    <inertial>
        <mass value="1"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia ixx="0.00144" ixy="0" ixz="0" iyy="0.00144" iyz="0" izz="0.00144"/>
    </inertial>
    <collision>
        <geometry>
            <sphere radius="0.03"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0"/>
    </collision>
  </link>

  <joint name="rear_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_caster_link"/>
    <origin xyz="-0.3 0.0 ${-0.502-0.0425}"/>        
  </joint>

  <link name="rear_caster_link">
    <visual>
      <geometry>
          <sphere radius="0.03"/>
      </geometry>
      <origin xyz="0.0 0.0 0.0"/>
    </visual>
    <inertial>
      <mass value="1"/>
      <origin xyz="0.0 0.0 0.0"/>
      <inertia ixx="0.00144" ixy="0" ixz="0" iyy="0.00144" iyz="0" izz="0.00144"/>
    </inertial>
    <collision>
      <geometry>
          <sphere radius="0.03"/>
      </geometry>
      <origin xyz="0.0 0.0 0.0"/>
    </collision>
  </link>

  <!-- Lidar -->
  <joint name="base_link_to_lidar_link" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.33 0.0 -0.3"/>        
  </joint>

  <link name="lidar_link">
    <visual>
        <geometry>
          <cylinder radius="0.03" length="0.02"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0"/>
    </visual>
    <inertial>
        <mass value="0.2"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia ixx="0.00144" ixy="0" ixz="0" iyy="0.00144" iyz="0" izz="0.00144"/>
    </inertial>
    <collision>
        <geometry>
            <cylinder radius="0.03" length="0.02"/>
        </geometry>
        <origin xyz="0.0 0.0 0.0"/>
    </collision>
  </link>

  <!-- Camera -->
  <joint name="base_link_to_camera_link" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.33 0.0 -0.24" rpy="0 0 0" />      
  </joint>

  <link name="camera_link">
    <visual>
        <geometry>
          <box size="0.1 0.06 0.02" />
        </geometry>
        <origin xyz="0.0 0.0 0.0"/>
    </visual>
    <inertial>
        <mass value="0.1"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia ixx="0.00144" ixy="0" ixz="0" iyy="0.00144" iyz="0" izz="0.00144"/>
    </inertial>
    <collision>
        <geometry>
            <box size="0.1 0.06 0.02" />
        </geometry>
        <origin xyz="0.0 0.0 0.0"/>
    </collision>
  </link>

  <!-- Map -->
  <!-- <link name="map">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </link>

  <joint name="virtual_map_right" type="fixed">
    <origin xyz="0.0 0.1547 -0.502" />
    <parent link="map" />
    <child link="right_wheel_link" />
  </joint>

  <joint name="virtual_map_left" type="fixed">
    <origin xyz="0.0 -0.1547 -0.502" />
    <parent link="map" />
    <child link="left_wheel_link" />
  </joint> -->

  <!-- camera plugin -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/library_robot/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- hokuyo plugin -->
  <gazebo reference="lidar_link">
      <material>Gazebo/Purple</material>
      <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
          <scan>
          <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-3.1415926</min_angle>
              <max_angle>3.1415926</max_angle>
          </horizontal>
          </scan>
          <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
          </range>
          <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
              achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
              stddev of 0.01m will put 99.7% of samples within 0.03m of the true
              reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
          </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/scan</topicName>
          <frameName>lidar_link</frameName>
      </plugin>
      </sensor>
    </gazebo>


  <gazebo reference="front_caster_link">
      <material>Gazebo/red</material>
      <mu1 value="0.001"/>
      <mu2 value="0.001"/>
  </gazebo>

  <gazebo reference="rear_caster_link">
      <material>Gazebo/red</material>
      <mu1 value="0.001"/>
      <mu2 value="0.001"/>
  </gazebo>

  <gazebo reference="base_link">
    <mu1 value="0.6"/>
    <mu2 value="0.6"/>
    <kp value="1000.0" />
    <kd value="1.0" />
    <fdir1 value="0 1 0"/>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="right_wheel_link">
    <mu1 value="0.99"/>
    <mu2 value="0.99"/>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="left_wheel_link">
    <mu1 value="0.99"/>
    <mu2 value="0.99"/>
    <material>Gazebo/Yellow</material>
  </gazebo>

</robot>
